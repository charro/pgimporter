name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-import:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: rust:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres-source:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Label used to access the service container
      postgres-target:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5555:5432
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Download source code and build debug version
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose

      - name: Connect to PostgreSQL from 
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        run: ./target/debug/pgimporter -s postgres:postgres@localhost:5432/public -t postgres:postgres@localhost:5555/public
        # Environment variable used by the `client.js` script to create a new PostgreSQL client
